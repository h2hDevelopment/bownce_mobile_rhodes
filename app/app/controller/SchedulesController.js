/*
 * File: app/controller/SchedulesController.js
 *
 * This file was generated by Sencha Architect version 2.0.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.SchedulesController', {
    extend: 'Ext.app.Controller',
    config: {
        refs: {
            schedulePages: '#schedule_pages'
        },

        control: {
            "#schedule_tournament_link": {
                tap: 'onTournamentLinkTap'
            }
        }
    },

    onTournamentLinkTap: function(button, e, options) {
        var tournament_record_index = this.getSchedulePages().getActiveIndex();
        if (tournament_record_index < 0) {
            return;
        }
        var tournamentsStore = Ext.data.StoreManager.lookup('TournamentsStore');
        var tournament_url = tournamentsStore.getAt(tournament_record_index).get("tournament_url");
        if (tournament_url.indexOf("?") > 0)
        tournament_url += "&";
        else
        tournament_url += "?";
        window.open(tournament_url + "rho_open_target=_blank");
    },

    refreshContents: function() {
        var tournamentsStore = Ext.data.StoreManager.lookup('TournamentsStore');
        this.getSchedulePages().removeAll();
        for(i=0;i<tournamentsStore.getCount();i++) {
            var schedulePanel = Ext.create("MyApp.view.SchedulePanel");
            schedulePanel.down("#tournament_logo").setSrc(tournamentsStore.getAt(i).get('tournament_logo_url'));    
            schedulePanel.down("#tournament_name").setHtml(tournamentsStore.getAt(i).get('tournament_name'));
            schedulePanel.down("#tournament_location").setHtml(tournamentsStore.getAt(i).get('tournament_location'));
            schedulePanel.down("#tournament_dates").setHtml(tournamentsStore.getAt(i).get('tournament_dates'));    
            this.getSchedulePages().add([schedulePanel]);
            this.getSchedulePages().setActiveItem(0);
        }
    }

});